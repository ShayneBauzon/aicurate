// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that flags potentially outdated information on a webpage.
 *
 * - flagOutdatedInformation - A function that handles the process of flagging outdated information.
 * - FlagOutdatedInformationInput - The input type for the flagOutdatedInformation function.
 * - FlagOutdatedInformationOutput - The return type for the flagOutdatedInformation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const FlagOutdatedInformationInputSchema = z.object({
  webpageContent: z
    .string()
    .describe('The content of the webpage to analyze for outdated information.'),
});

export type FlagOutdatedInformationInput = z.infer<
  typeof FlagOutdatedInformationInputSchema
>;

const FlagOutdatedInformationOutputSchema = z.object({
  shouldFlag: z
    .boolean()
    .describe(
      'Whether the information on the webpage should be flagged as potentially outdated.'
    ),
  reason: z
    .string()
    .describe(
      'The reason why the information is considered potentially outdated.'
    ),
});

export type FlagOutdatedInformationOutput = z.infer<
  typeof FlagOutdatedInformationOutputSchema
>;

export async function flagOutdatedInformation(
  input: FlagOutdatedInformationInput
): Promise<FlagOutdatedInformationOutput> {
  return flagOutdatedInformationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'flagOutdatedInformationPrompt',
  input: {schema: FlagOutdatedInformationInputSchema},
  output: {schema: FlagOutdatedInformationOutputSchema},
  prompt: `You are an AI assistant that analyzes webpage content to identify potentially outdated information.

You will receive the content of a webpage as input. Your task is to determine if the information on the page is potentially outdated and needs to be flagged to the user.

Consider factors such as publication dates, the relevance of the information to current events, and any indications that the information may no longer be accurate.

Based on your analysis, set the 'shouldFlag' output field to true if the information should be flagged, and provide a detailed reason in the 'reason' field.

If the information appears to be current and accurate, set 'shouldFlag' to false and provide a reason why it is considered up-to-date.

Webpage Content: {{{webpageContent}}}`,
});

const flagOutdatedInformationFlow = ai.defineFlow(
  {
    name: 'flagOutdatedInformationFlow',
    inputSchema: FlagOutdatedInformationInputSchema,
    outputSchema: FlagOutdatedInformationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
